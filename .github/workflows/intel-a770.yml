name: intel-a770-ci

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ '*' ]
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  test:
    runs-on: 'intel-a770'
    env:
      CI_ENV: 1
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Setup python
        run: |
          pip uninstall -y flash-linear-attention
          pip install --upgrade pytest setuptools wheel ninja
          pip install --upgrade torch pytorch-triton-xpu --index-url https://download.pytorch.org/whl/xpu
          pip install --no-use-pep517 .

      - name: Check GPU status
        run: |
          python scripts/check_gpu.py
          if [ $? -ne 0 ]; then
            echo "GPU is occupied. Stopping the workflow."
            exit 1
          fi

      - name: Get changed files
        if: |
          github.event_name == 'pull_request' ||
          (github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/'))
        id: changed-files
        uses: tj-actions/changed-files@v46.0.3

      - name: Find dependent test files
        if: |
          github.event_name == 'pull_request' ||
          (github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/'))
        id: find-dependent-tests
        run: |
          # Run the Python script to find dependent test files
          TEST_FILES=$(python scripts/find_dependent_tests.py "${{ steps.changed-files.outputs.all_changed_files }}")
          echo "test_files=$TEST_FILES" >> $GITHUB_OUTPUT

      - name: Test compiling on changed test files
        if: steps.find-dependent-tests.outputs.test_files
        run: |
          COMPILER_MODE=1 TRITON_PRINT_AUTOTUNING=1 SKIP_TEST_CHUNK_VARLEN=1 \
            pytest ${{ steps.find-dependent-tests.outputs.test_files }} --capture=no

      - name: Run pytest on test files
        continue-on-error: true
        if: steps.find-dependent-tests.outputs.test_files
        run: |
          COMPILER_MODE=0 TRITON_PRINT_AUTOTUNING=0 SKIP_TEST_CHUNK_VARLEN=1 \
            pytest ${{ steps.find-dependent-tests.outputs.test_files }}

      - name: Run pytest on varlen test files
        if: steps.find-dependent-tests.outputs.test_files
        continue-on-error: true
        run: |
          COMPILER_MODE=0 TRITON_PRINT_AUTOTUNING=0 SKIP_TEST_CHUNK_VARLEN=0 \
            pytest ${{ steps.find-dependent-tests.outputs.test_files }} || \
            echo "Varlen tests failed (non-critical)"

      - name: Test full compiling on all test files
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          COMPILER_MODE=1 TRITON_PRINT_AUTOTUNING=1 SKIP_TEST_CHUNK_VARLEN=1 \
            pytest tests/ --capture=no

      - name: Run full pytest on test files
        continue-on-error: true
        if: false && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          COMPILER_MODE=0 TRITON_PRINT_AUTOTUNING=0 SKIP_TEST_CHUNK_VARLEN=1 \
            pytest ${{ steps.find-dependent-tests.outputs.test_files }}

      - name: Run full pytest on varlen test files
        continue-on-error: true
        if: false && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          COMPILER_MODE=0 TRITON_PRINT_AUTOTUNING=0 SKIP_TEST_CHUNK_VARLEN=0 \
            pytest ${{ steps.find-dependent-tests.outputs.test_files }} || \
            echo "Varlen tests failed (non-critical)"
